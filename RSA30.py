import math
def moder(n):
	base=2
	while base <math.sqrt(n):
		if(n%base==0):
			fbase=base
			print(base,int(n/base))
		base+=1
	pass
	f=getEuler(fbase,int(n/fbase))
	print('f(n)欧拉函数值：%d'%f)#
	return f
#-------------------------------------
# 求欧拉函数f(n)
def getEuler(prime1, prime2):
    return (prime1-1)*(prime2-1)
#---------------------------------------------------------------------------------------
# 19d - 920071380k= 1
# 求私钥d
def getDkey(e, Eulervalue):#可以辗转相除法
	k = 1
	while True:
		if (((Eulervalue * k) + 1) % e) == 0:
			(d,m)=divmod(Eulervalue * k + 1,e)
			return d#避免科学计数法最后转int失去精度
		k += 1
#------------------------------------------------------
#求明文
def Ming(c,d,n):
	return pow(c,d,n)
#---------------------------------------------------------------------------------------
if __name__=='__main__':
	n=int(input('请输入要分解的质数： '))#920139713
	d =getDkey(19, moder(n))
	print('私钥为： %d'%d)
	c=[704796792,752211152,274704164,18414022,368270835,483295235,263072905,459788476,483295235,459788476,663551792,475206804,
	   459788476,428313374,475206804,459788476,425392137,704796792,458265677,341524652,483295235,534149509,425392137,428313374,
	   425392137,341524652,458265677,263072905,483295235,828509797,341524652,425392137,475206804,428313374,483295235,475206804,459788476,306220148]
	L=[]
	for x in c:
		L.append(Ming(x,d,n))
	print(L)#明文ascii表
	for x in L:
		print(chr(x),end='')
 
 
 
